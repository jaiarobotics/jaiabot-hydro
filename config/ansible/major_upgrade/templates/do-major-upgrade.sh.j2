#!/bin/bash

set -x
set -e -u

old_ro_rootfs_mountpoint="/media/root-ro"
old_rw_overlay_mountpoint="/media/root-rw"

new_ro_rootfs_mountpoint=${old_rw_overlay_mountpoint}
new_rw_overlay_mountpoint=${old_ro_rootfs_mountpoint}

boot_mountpoint="/boot/firmware"

###############################
# Live pivot onto underlay FS #
###############################

mount -o remount,rw ${old_ro_rootfs_mountpoint}
mkdir -p ${old_ro_rootfs_mountpoint}/oldroot
mount --make-rprivate /
pivot_root ${old_ro_rootfs_mountpoint} ${old_ro_rootfs_mountpoint}/oldroot
for i in dev proc sys run boot/firmware var/log media/root-rw; do mount --move /oldroot/$i /$i; done
systemctl daemon-reload

###############################
# Remove rootfs overlayconf file (so if extraction step fails or is interrupted, will still boot into old underlay).
###############################

rm -f /etc/overlayroot.conf

###############################
# Extract new rootfs
###############################

rm -rf ${new_ro_rootfs_mountpoint}/*
tar -xz -f {{ upgrade_dir }}/{{ major_version }}.rootfs.tar.gz -C ${new_ro_rootfs_mountpoint}

###############################
# Restore reuse files
###############################

rsync -aP {{ upgrade_reuse_dir }}/ ${new_ro_rootfs_mountpoint}/

###############################
# Write new boot dir
###############################

rsync -aP --delete {{ upgrade_boot_dir }}/ ${boot_mountpoint}/ 

###############################
# Swap rootfs/overlay labels     
###############################
ROOTFS_DEVICE=$(blkid -L rootfs)
FS_TYPE=$(blkid -o value -s TYPE "$ROOTFS_DEVICE")
echo "Detected filesystem: $FS_TYPE on $ROOTFS_DEVICE"

case "$FS_TYPE" in
    ext4)
        e2label "$ROOTFS_DEVICE" overlay
        ;;
    btrfs)
        btrfs filesystem label "$ROOTFS_DEVICE" overlay
        ;;
    *)
        echo "Error: Unsupported filesystem type '$FS_TYPE'"
        exit 1
        ;;
esac

btrfs filesystem label ${new_ro_rootfs_mountpoint} "rootfs"

###############################
# Reboot    
###############################

systemctl reboot --force
